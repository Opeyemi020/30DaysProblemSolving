package day1;import java.util.ArrayList;public class LongestSubstring {    public int longestSubstring(String inputString){        ArrayList<Integer> charIndices = new ArrayList<>();        int ASCII_SIZE_LIMIT = 256;        for (int counter = 0; counter < ASCII_SIZE_LIMIT; counter++) {            charIndices.add(-1);        }        int maxSubstringLength = 0;        int currentSubstringStart = 0;        for (int index = 0; index  < inputString.length(); index++) {            char charAt = inputString.charAt(index);            // If the character has been seen before,            // update the current substring start index to the index after the last seen occurrence            int ONE = 1;            if (charIndices.get(charAt) != -ONE){                currentSubstringStart = Math.max(currentSubstringStart,charIndices.get(charAt) +ONE);            }            charIndices.set(charAt,index);            maxSubstringLength = Math.max(maxSubstringLength,index - currentSubstringStart +ONE);        }        return maxSubstringLength;    }}